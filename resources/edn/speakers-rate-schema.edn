{:objects
 {:Speaker {:description "A speaker at conference"
            :fields {:id {:type (non-null Int)}
                     :firstName {:type (non-null String)}
                     :middleName {:type String}
                     :lastName {:type (non-null String)}
                     :rating {:type Int
                              :resolve :resolve-speaker-rating}
                     :talks {:type (list :Talk)
                             :resolve :resolve-speaker-talks}
                     :reviews {:type (list :Review)
                               :resolve :resolve-speaker-reviews}}}
  :Talk {:description "A speaker's talk at conference"
         :fields {:id {:type (non-null Int)}
                  :speaker {:type (non-null :Speaker)
                            :resolve :resolve-talk-speaker}
                  :name {:type (non-null String)}
                  :videoUrl {:type String}
                  :slidesUrl {:type String}
                  :reviews {:type (list :Review)
                            :resolve :resolve-talk-reviews}}}
  :Review {:description "Review of the speaker's talk"
           :fields {:id {:type (non-null Int)}
                    :talk {:type (non-null :Talk)
                           :resolve :resolve-review-talk}
                    :rating {:type (non-null Int)}
                    :comment {:type String}}}
  :AddSpeakerResult {:description "Result of addSpeaker mutation"
                     :fields {:speaker {:type :Speaker}
                              :errors {:type (list String)}}}
  :AddReviewResult {:description "Result of addReview mutation"
                    :fields {:review {:type :Review}
                             :errors {:type (list String)}}}
  :AddTalkResult {:description "Result of addTalk mutation"
                  :fields {:talk {:type :Talk}
                           :errors {:type (list String)}}}}
 :queries
 {:talk {:type :Talk
         :description "Retrieve a single talk by its id"
         :args {:id {:type (non-null Int)}}
         :resolve :resolve-talk}
  :speaker {:type :Speaker
            :description "Retrieve a single speaker by their id"
            :args {:id {:type (non-null Int)}}
            :resolve :resolve-speaker}
  :speakers {:type (list :Speaker)
             :description "Retrieve all speakers"
             :resolve :resolve-speakers}}
 :mutations
 {:addSpeaker {:type :AddSpeakerResult
               :description "Create a new speaker"
               :args {:firstName {:type (non-null String)}
                      :middleName {:type String}
                      :lastName {:type (non-null String)}}
               :resolve :resolve-add-speaker}
  :addTalk {:type :AddTalkResult
            :description "Create a talk for a speaker"
            :args {:speakerId {:type (non-null Int)}
                   :name {:type (non-null String)}
                   :videoUrl {:type String}
                   :slidesUrl {:type String}}
            :resolve :resolve-add-talk}
  :addReview {:type :AddReviewResult
              :description "Review a talk of speaker"
              :args {:talkId {:type (non-null Int)}
                     :rating {:type (non-null Int)}
                     :comment {:type String}}
              :resolve :resolve-add-review}}}
